% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/npc.R
\name{npc}
\alias{npc}
\title{Neyman-Pearson criterion for marginal feature ranking}
\usage{
npc(x, y, B, alpha_s, delta, multi.core = F, ranseed = 1001)
}
\arguments{
\item{x}{n by p feature matrix}

\item{y}{response vector of length n}

\item{B}{number of random splitting of data}

\item{alpha_s}{a vector of type I error upper bound}

\item{delta}{violation rate}

\item{multi.core}{logical if use parallel computing. Default to FALSE}

\item{ranseed}{random seed}
}
\value{
a list of p by 2 data frames whose first column contains classical criterion values and the second column contains rankings based on the classical criterion values. Each data frame corresponds to an alpha value in \code{alpha_s}. Rank = 1 has the lowest classical criterion value.
}
\description{
This function allows you to implement marginal feature ranking based on empirical type II error under the Neyman-Pearson criterion.
}
\examples{
set.seed(1)
library(mvtnorm)
gen_data <- function(n, p, mu_0, mu_1, Sigma_0, Sigma_1) {
d <- length(mu_0)
y <- sample(0:1, n, replace=TRUE, prob=c(1-p, p))
x <- matrix(NA, nrow=n, ncol=d)
x[y==0,] <- rmvnorm(n=sum(y==0), mean=mu_0, sigma=Sigma_0)
x[y==1,] <- rmvnorm(n=sum(y==1), mean=mu_1, sigma=Sigma_1)
return(list(x=x, y=y))
}
n <- 400
B <- 11
d <- 30
d_select <- 10
mu_0 <- c(rep(-1.5, d_select), rnorm(d-d_select))
mu_1 <- c((d_select:1)*.1, mu_0[(d_select+1):d])
Sigma_0 <- diag(rep(2^2, d))
Sigma_1 <- Sigma_0
alpha_s <- c(0.05, 0.1, 0.2, 0.3)
delta <- 0.05
data <- gen_data(n, p, mu_0, mu_1, Sigma_0, Sigma_1)
re <- npc(data$x, data$y, B, alpha_s, delta, multi.core=F,ranseed = 1001)
re

}
\references{
\bold{FILL HERE}
}
\author{
Jingyi Jessica Li, Yiling Chen (\email{yiling0210@ucla.edu}), Xin Tong
}
