% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ cc.R
\name{cc}
\alias{cc}
\title{classical criterion for marginal feature ranking}
\arguments{
\item{x}{n by p feature matrix}

\item{y}{response vector of length n}

\item{B}{number of random splitting of data}

\item{multi.core}{logical if use parallel computing. Default to FALSE}

\item{ranseed}{random seed}
}
\value{
a p by 2 dataframe whose first column contains classical criterion values and the second column contains rankings based on the classical criterion values. Rank = 1 has the lowest classical criterion value.
}
\description{
This function allows you to implement marginal feature ranking based on empirical risk under the classical criterion.
}
\examples{
set.seed(1)
gen_data <- function(n, p, mu_0, mu_1, Sigma_0, Sigma_1) {
d <- length(mu_0) # the dimension of X
y <- sample(0:1, n, replace=TRUE, prob=c(1-p, p))
x <- matrix(NA, nrow=n, ncol=d)
x[y==0,] <- rmvnorm(n=sum(y==0), mean=mu_0, sigma=Sigma_0)
x[y==1,] <- rmvnorm(n=sum(y==1), mean=mu_1, sigma=Sigma_1)
return(list(x=x, y=y))
}
n <- 400 ## sample size
B <- 11 ## number of random splits
d <- 30 ## total number of features
d_select <- 10 ## number of important features
mu_0 <- c(rep(-1.5, d_select), rnorm(d-d_select))
mu_1 <- c((d_select:1)*.1, mu_0[(d_select+1):d])
Sigma_0 <- diag(rep(2^2, d))
Sigma_1 <- Sigma_0
data = gen_data(n, p, mu_0, mu_1, Sigma_0, Sigma_1)
re = cc(data$x, data$y, B, multi.core=F)
re
}
\references{
\bold{FILL HERE}
}
\author{
Jingyi Jessica Li, Yiling Chen (\email{yiling0210@ucla.edu}), Xin Tong
}
